<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Janus.Wpf.Controls.DialogBoxes"
             xmlns:jcvt="clr-namespace:Janus.Wpf.Controls.Converters" 
    x:Class="Janus.Wpf.Controls.DialogBoxes.ConfirmationDialog"
             mc:Ignorable="d" 
             d:DesignHeight="160" Width="400" SnapsToDevicePixels="True" 
             d:DataContext="{d:DesignInstance {x:Type local:ConfirmationModel}}">
    <UserControl.Resources>
        <jcvt:ModelCommandsConverter x:Key="ModelCommandsConverter"/>
    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </UserControl.Style>
    <Grid>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}"/>
                    <GradientStop Offset="1" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                </LinearGradientBrush>
            </Border.Background>
            <Border.BorderThickness>
                <Thickness Bottom="{StaticResource {x:Static SystemParameters.BorderWidthKey}}"
                           Top="{StaticResource {x:Static SystemParameters.BorderWidthKey}}"
                           Left="{StaticResource {x:Static SystemParameters.BorderWidthKey}}"
                           Right="{StaticResource {x:Static SystemParameters.BorderWidthKey}}"/>
            </Border.BorderThickness>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition MinHeight="80" />
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="34" />
                </Grid.RowDefinitions>
                <Border Height="{DynamicResource {x:Static SystemParameters.CaptionHeightKey}}"  
                        MouseDown="Caption_MouseDown" MouseUp="Caption_MouseUp" MouseMove="Caption__MouseMove">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Offset="0" Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}"/>
                            <GradientStop Offset="1" Color="{DynamicResource {x:Static SystemColors.GradientActiveCaptionColorKey}}"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <TextBlock VerticalAlignment="Center" FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"
                        FontWeight="{DynamicResource {x:Static SystemFonts.CaptionFontWeightKey}}"
                        FontStyle="{DynamicResource {x:Static SystemFonts.CaptionFontStyleKey}}"
                        FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"
                        Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" Text="{Binding Title}"/>
                </Border>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="64"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="8"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="8"/>
                        <RowDefinition Height="64"/>
                        <RowDefinition />
                        <RowDefinition Height="8"/>
                    </Grid.RowDefinitions>
                    <Image Grid.Row="1" Grid.Column="1"/>
                    <TextBlock Grid.Row="1" Grid.Column="3" Grid.RowSpan="2" Text="{Binding Message, FallbackValue=message should be displayed here!!!}"/>
                </Grid>
                <Border Grid.Row="2" BorderThickness="1" Margin="4,0" >
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#80000000"/>
                            <GradientStop Offset=".5" Color="#80000000"/>
                            <GradientStop Offset=".5" Color="#80FFFFFF"/>
                            <GradientStop Offset="1" Color="#80FFFFFF"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                </Border>
                <StackPanel Grid.Row="3" HorizontalAlignment="Center" Orientation="Horizontal" Margin="4,5,4,4">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Width" Value="75"/>
                            <Setter Property="Height" Value="23" />
                            <Setter Property="Margin" Value="4,0,0,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button Content="Yes" Command="{Binding CloseCommand, Converter={StaticResource ModelCommandsConverter}}" CommandParameter="Yes" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Buttons}" Value="YesNo">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="YesNoCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="No" Command="{Binding CloseCommand, Converter={StaticResource ModelCommandsConverter}}" CommandParameter="No" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Buttons}" Value="YesNo">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="YesNoCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Ok" Command="{Binding CloseCommand, Converter={StaticResource ModelCommandsConverter}}" CommandParameter="Ok" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Buttons}" Value="OkCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Retry" Command="{Binding CloseCommand, Converter={StaticResource ModelCommandsConverter}}" CommandParameter="Retry" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbort">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbortCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbortIgnore">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Abort" Command="{Binding CloseCommand, Converter={StaticResource ModelCommandsConverter}}" CommandParameter="Abort" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbort">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbortCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbortIgnore">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Ignore" Command="{Binding CloseCommand, Converter={StaticResource ModelCommandsConverter}}" CommandParameter="Ignore" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbortIgnore">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Cancel" Command="{Binding CloseCommand, Converter={StaticResource ModelCommandsConverter}}" CommandParameter="Cancel" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Buttons}" Value="OkCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="YesNoCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Buttons}" Value="RetryAbortCancel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
